Question: 
Sourav learnt the basic addition of two numbers which does not involve a carry. When he tries to add two numbers 
which involve a carry, he faces difficulty
Write a program that reads two numbers A and B and checks if Arjun faces difficulty or not


Input:
The input will be a single line contains two space-separated integers representing A and B
The next M lines of input contain N  space-separated integers representing the matrix.

Output:
The output should be a single line containing a string. Hard should be printed 
if the addition of two numbers requires a carry, otherwise Easy should be printed 

Explanation:
TestCase: If the given A=229 and B=390, 
In order to add 229+390, it must require a carry, which means the answer is Hard

     1      (Carry)
     2 2 9
   + 3 9 0
    ___________
    619
    ____________

Sample Input 1:
4 6
Sample Output 1:
Hard

Sample Input 2:
1 1
Sample Output 2:
Easy

Sample Input 3:
1000000000000000000 1000000000000000000
Sample Output 3:
Easy

Sample Input 4:
1 999999999999999999
Sample Output 4:
Hard

Sample Input 5:
998244353 1732693
Sample Output 5:
Hard

Sample Input 6:
548762016442701542 451237983557298457
Sample Output 6:
Easy

Sample Input 7:
6415010023478 3485879875511
Sample Output 7:
Hard

Sample Input 8:
34567890123456789 765432109876543210
Sample Output 8:
Easy

Sample Input 9:
345678901234567890 765432109876543210
Sample Output 9:
Hard

Sample Input 10:
664548737085460347 123120031701318321
Sample Output 10:
Easy

Sample Input 11:
199999999999999999 99999999999999999
Sample Output 11:
Hard

Solution:

def check_addition_involves_carry(first_number, second_number):
    first_number_length, second_number_length = len(first_number), len(second_number)
    greater_length = max(first_number_length, second_number_length)
    if(len(first_number) < greater_length):
        first_number = "0" * (greater_length - len(first_number)) + first_number
    elif(len(second_number) < greater_length):
        second_number = "0" *  (greater_length - len(second_number)) + second_number
    is_carry_exist = False
    for index in range(len(first_number)):
        if(int(first_number[index]) + int(second_number[index]) > 9):
            is_carry_exist = True
            break
    return is_carry_exist
def main():
    first_number, second_number = input().split()

    is_carry_exist = check_addition_involves_carry(first_number, second_number)
    if(is_carry_exist):
        print("Hard")
    else:
        print("Easy")

main()
